{
	"name": "conditionalsplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "blob_employee",
						"type": "DatasetReference"
					},
					"name": "employees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "conditional_split",
						"type": "DatasetReference"
					},
					"name": "empdept50"
				},
				{
					"dataset": {
						"referenceName": "conditional_split",
						"type": "DatasetReference"
					},
					"name": "empdept6070"
				},
				{
					"dataset": {
						"referenceName": "conditional_split",
						"type": "DatasetReference"
					},
					"name": "default"
				}
			],
			"transformations": [
				{
					"name": "deptwisesplit"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employees",
				"employees split(between(DEPARTMENT_ID,'10','50'),",
				"     DEPARTMENT_ID>='60' && DEPARTMENT_ID<='70',",
				"     disjoint: false) ~> deptwisesplit@(dept50, dept60and70, defeault)",
				"deptwisesplit@dept50 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     partitionFileNames:['employees_dept_50.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> empdept50",
				"deptwisesplit@dept60and70 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     partitionFileNames:['emp_dept_6070.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> empdept6070",
				"deptwisesplit@defeault sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     partitionFileNames:['emp_dept_default_grp.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> default"
			]
		}
	}
}